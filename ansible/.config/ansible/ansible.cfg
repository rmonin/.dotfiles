[defaults]
# (boolean) By default Ansible will issue a warning when received from a task action (module or action plugin)
# These warnings can be silenced by adjusting this setting to False.
action_warnings=True

# (boolean) This option forces color mode even when running without a TTY or the "nocolor" setting is True.
force_color=True

# (boolean) This setting allows suppressing colorizing output, which is used to give a better indication of failure and status information.
nocolor=False

# (string) Chooses which cache plugin to use, the default 'memory' is ephemeral.
fact_caching=memory

# (integer) Expiration timeout for the cache plugin data
fact_caching_timeout=86400

# (string) When a collection is loaded that does not support the running Ansible version (with the collection metadata key `requires_ansible`).
collections_on_ansible_version_mismatch=warning

# (boolean) A boolean to enable or disable scanning the sys.path for installed collections
collections_scan_sys_path=True

# (boolean) Toggle to control the showing of deprecation warnings
deprecation_warnings=True

# (boolean) Toggle to control showing warnings related to running devel
devel_warning=True

# (boolean) Toggle to control displaying skipped task/host entries in a task in the default callback
display_skipped_hosts=True

# (string) By default Ansible will issue a warning when a duplicate dict key is encountered in YAML.
# These warnings can be silenced by adjusting this setting to False.
duplicate_dict_key=warn

# (boolean) Toggle to allow missing handlers to become a warning instead of an error when notifying.
error_on_missing_handler=True

# (string) Path to the Python interpreter to be used for module execution on remote targets, or an automatic discovery mode. Supported discovery modes are ``auto`` (the default), ``auto_silent``, ``auto_legacy``, and ``auto_legacy_silent``. All discovery modes employ a lookup table to use the included system Python (on distributions known to include one), falling back to a fixed ordered list of well-known Python interpreter locations if a platform-specific default is not available. The fallback behavior will issue a warning that the interpreter should be set explicitly (since interpreters installed later may change which one is used). This warning behavior can be disabled by setting ``auto_silent`` or ``auto_legacy_silent``. The value of ``auto_legacy`` provides all the same behavior, but for backwards-compatibility with older Ansible releases that always defaulted to ``/usr/bin/python``, will use that interpreter if present.
interpreter_python=auto

# (boolean) If 'false', invalid attributes for a task will result in warnings instead of errors
invalid_task_attribute_failed=True

# (boolean) By default Ansible will issue a warning when there are no hosts in the inventory.
# These warnings can be silenced by adjusting this setting to False.
localhost_warning=True

# (boolean) Allows disabling of warnings related to potential issues on the system running ansible itself (not on the managed hosts)
# These may include warnings about 3rd party packages or other conditions that should be resolved if possible.
system_warnings=True

[diff]
# (integer) How many lines of context to show when displaying the differences between files.
context=5

[inventory]
# (boolean) By default Ansible will issue a warning when no inventory was loaded and notes that it will use an implicit localhost-only inventory.
# These warnings can be silenced by adjusting this setting to False.
inventory_unparsed_warning=True
